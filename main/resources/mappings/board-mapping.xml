<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BoardDAO">

	<resultMap type="board" id="boardResultSet">
		<id property="boardNum" column="B_NO" />
		<result property="userNum" column="M_NO" />
		<result property="boardTitle" column="B_TITLE" />
		<result property="boardContent" column="B_CONTENT" />
		<result property="boardDate" column="B_DATE" />
		<result property="boardStatus" column="STATUS" />
		<result property="boardView" column="B_VIEW" />

		<result property="userId" column="M_ID" />  <!-- 별칭으로 가져온 작성자 아이디 -->
		<result property="likeCnt" column="LIKE_CNT" /> <!-- 좋아요 수 -->
		<result property="imageName" column="I_NM" /> <!-- 대표 이미지 이름 -->
		<result property="isChecked" column="ISCHECKED" /> <!-- 좋아요 여부 -->
		<result property="replyCnt" column="REPLY_CNT" /> <!-- 댓글 수 -->
	
		<result property="catName" column="CAT_NM" />
	</resultMap>

	<!-- 글 작성 -->
	<insert id="insertBoard">
		INSERT INTO BOARD (M_NO, B_TITLE, B_CONTENT)
		VALUES((SELECT M_NO FROM MEMBER WHERE M_ID = #{userId}),
		#{boardTitle}, #{boardContent})
	</insert>

	<!-- 1. 관리자 모드 : 게시글 상태 변경 (1: 정상, 2: 신고, 3: 삭제) -->
	<!-- 2. 회원 : 게시글 수정 -->
	<!-- 3. 게시글 조회수 +1 -->
	<update id="updateBoard">
		UPDATE BOARD SET 
		<if test="searchCondition == 'changeStatus'">
			STATUS = #{boardStatus} WHERE B_NO = #{boardNum}
		</if>
		
		<if test="searchCondition == 'edit'">
		B_TITLE = #{boardTitle}, B_CONTENT = #{boardContent}, B_DATE = CURTIME()
		WHERE B_NO = #{boardNum}
		</if>
		
		<if test="searchCondition == 'viewCnt'">
		B_VIEW = B_VIEW + 1 WHERE B_NO = #{boardNum}
		</if>
	</update>

	<!-- 게시글 삭제 처리 -->
	<update id="deleteBoard">
		UPDATE BOARD SET STATUS = 3 WHERE B_NO = #{boardNum}
	</update>

	<select id="selectAllBoard" resultMap="boardResultSet">
		<!-- 글 전체 보기 -->
		<if test="searchCondition == null">
		SELECT IFNULL(i.I_NM, 'img/default.jpg') AS I_NM, 
			EXISTS(SELECT LK_NO FROM BLIKE bl WHERE bl.B_NO = b.B_NO AND M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId})) AS ISCHECKED, 
			COUNT(DISTINCT bl.LK_NO) AS LIKE_CNT, COUNT(DISTINCT r.RE_NO) AS REPLY_CNT, m.M_ID, b.* 
		FROM BOARD b INNER JOIN MEMBER m ON b.M_NO = m.M_NO 
		LEFT JOIN BLIKE bl ON b.B_NO = bl.B_NO LEFT JOIN REPLY r ON b.B_NO = r.B_NO 
		LEFT JOIN (SELECT * FROM IMAGE WHERE TYPE_NO = 201) i ON b.B_NO = i.TARGET_NO 
		WHERE b.STATUS != 3 GROUP BY b.B_NO, i.I_NO ORDER BY B_NO DESC 
		</if>
		
		<!-- 관리자 : 게시글 관리 -->
		<if test="searchCondition == 'admin'">
		SELECT b.B_NO, b.M_NO, m.M_ID, b.B_TITLE, b.B_CONTENT, b.B_DATE, b.STATUS, b.B_VIEW FROM BOARD b 
		INNER JOIN `MEMBER` m ON b.M_NO = m.M_NO ORDER BY B_NO DESC
		</if>
		
		<!-- 전체 3등보기 -->
		<if test="searchCondition == 'top3'">
		SELECT m.CAT_NM, b.B_NO, b.B_VIEW, COUNT(DISTINCT LK_NO) AS LIKE_CNT, COUNT(DISTINCT RE_NO) AS REPLY_CNT, IFNULL(i.I_NM, 'img/default.jpg') AS I_NM 
		FROM BOARD b LEFT JOIN BLIKE bl ON b.B_NO = bl.B_NO LEFT JOIN REPLY r ON b.B_NO = r.B_NO 
		LEFT JOIN MEMBER m ON b.M_NO = m.M_NO 
		LEFT JOIN (SELECT * FROM IMAGE WHERE TYPE_NO = 201) i ON b.B_NO = i.TARGET_NO WHERE b.STATUS != 3 
		GROUP BY B_NO, i.I_NM ORDER BY LIKE_CNT DESC, b.B_VIEW DESC, REPLY_CNT DESC LIMIT 3
		</if>
		
		<!-- 내가 좋아요 누른 글 목록 조회 -->
		<if test="searchCondition == 'myLike'">
		SELECT b.B_NO, b.B_TITLE, b.B_DATE, m.M_ID 
		FROM BOARD b 
			INNER JOIN `MEMBER` m ON b.M_NO = m.M_NO 
			INNER JOIN BLIKE bl ON b.B_NO = bl.B_NO AND bl.M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId}) 
		WHERE b.STATUS != 3 
		GROUP BY b.B_NO ORDER BY B_NO DESC
		</if>
		
		<!-- 글 검색 -->
		<if test="searchContent != null">
			<if test="searchCondition == 'title'">
			SELECT b.*, COUNT(DISTINCT LK_NO) AS LIKE_CNT, COUNT(DISTINCT RE_NO) AS REPLY_CNT, IFNULL(i.I_NM, 'img/default.jpg') AS I_NM, IF(bl.M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId}), TRUE, FALSE) AS ISCHECKED 
			FROM (SELECT b.*, m.M_ID FROM BOARD b INNER JOIN MEMBER m ON b.M_NO = m.M_NO WHERE STATUS != 3 AND b.B_TITLE LIKE CONCAT('%', #{searchContent} ,'%')) b 
			LEFT JOIN BLIKE bl ON b.B_NO = bl.B_NO LEFT JOIN REPLY r ON b.B_NO = r.B_NO 
			LEFT JOIN (SELECT * FROM IMAGE WHERE TYPE_NO = 201) i ON b.B_NO = i.TARGET_NO 
			GROUP BY b.B_NO, i.I_NM, bl.M_NO ORDER BY B_NO DESC
			</if>
			<if test="searchCondition == 'content'">
			SELECT b.*, COUNT(DISTINCT LK_NO) AS LIKE_CNT, COUNT(DISTINCT RE_NO) AS REPLY_CNT, IFNULL(i.I_NM, 'img/default.jpg') AS I_NM, IF(bl.M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId}), TRUE, FALSE) AS ISCHECKED 
			FROM (SELECT b.*, m.M_ID FROM BOARD b INNER JOIN MEMBER m ON b.M_NO = m.M_NO WHERE STATUS != 3 AND b.B_CONTENT LIKE CONCAT('%', #{searchContent} ,'%')) b 
			LEFT JOIN BLIKE bl ON b.B_NO = bl.B_NO LEFT JOIN REPLY r ON b.B_NO = r.B_NO 
			LEFT JOIN (SELECT * FROM IMAGE WHERE TYPE_NO = 201) i ON b.B_NO = i.TARGET_NO 
			GROUP BY b.B_NO, i.I_NM, bl.M_NO ORDER BY B_NO DESC
			</if>
			<if test="searchCondition == 'writer'">
			SELECT b.*, COUNT(DISTINCT LK_NO) AS LIKE_CNT, COUNT(DISTINCT RE_NO) AS REPLY_CNT, IFNULL(i.I_NM, 'img/default.jpg') AS I_NM, IF(bl.M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId}), TRUE, FALSE) AS ISCHECKED 
			FROM (SELECT b.*, m.M_ID FROM BOARD b INNER JOIN MEMBER m ON b.M_NO = m.M_NO WHERE STATUS != 3 AND m.M_ID LIKE CONCAT('%', #{searchContent} ,'%')) b 
			LEFT JOIN BLIKE bl ON b.B_NO = bl.B_NO LEFT JOIN REPLY r ON b.B_NO = r.B_NO 
			LEFT JOIN (SELECT * FROM IMAGE WHERE TYPE_NO = 201) i ON b.B_NO = i.TARGET_NO 
			GROUP BY b.B_NO, i.I_NM, bl.M_NO ORDER BY B_NO DESC
			</if>
		</if>
	</select>
	
	<!-- 셀렉트원 -->
	<select id="selectOneBoard" resultMap="boardResultSet">
		<choose>
			<when test="searchCondition == 'newest'">
			SELECT MAX(B_NO) AS B_NO FROM BOARD
			</when>
			<otherwise>
			SELECT b.*, m.M_ID, COUNT(DISTINCT bl.LK_NO) AS LIKE_CNT, 
				COUNT(DISTINCT r.RE_NO) AS REPLY_CNT, 
				EXISTS(SELECT LK_NO FROM BLIKE WHERE B_NO = #{boardNum} AND M_NO = (SELECT M_NO FROM MEMBER WHERE M_ID = #{userId})) AS ISCHECKED 
			FROM BOARD b INNER JOIN MEMBER m ON b.M_NO = m.M_NO LEFT JOIN BLIKE
			bl ON b.B_NO = bl.B_NO 
			LEFT JOIN REPLY r ON b.B_NO = r.B_NO WHERE b.B_NO = #{boardNum} GROUP BY b.B_NO
			</otherwise>
		</choose>
	</select>

</mapper>